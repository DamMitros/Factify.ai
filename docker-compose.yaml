services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: on-failure
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - ./backend/src:/app
      - ./common:/modules/common
    networks:
      - default
      - auth
  
  cron:
    container_name: cron
    build:
      context: .
      dockerfile: cron/Dockerfile
    restart: on-failure
    env_file:
      - .env
    ports:
      - "8081:8080"
    volumes:
      - ./cron/src:/app
      - ./common:/modules/common
    networks:
      - default

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:3000"
    networks:
      - default

  mongodb:
    container_name: mongodb
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - mongodb_data:/data/db
    networks:
      - default

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.0.0
    env_file:
      - .env
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KEYCLOAK_ADMIN_USERNAME} #to konto tymczasowe - utwórz stałe
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/${POSTGRES_DB_NAME}
      - KC_DB_USERNAME=${POSTGRES_DB_USERNAME}
      - KC_DB_PASSWORD=${POSTGRES_DB_PASSWORD}
      - KC_HOSTNAME=localhost
    command:
      - start-dev
    ports:
      - "${KEYCLOAK_PORT}:8080"
    depends_on:
      - keycloak-db
    networks:
      - auth

  keycloak-db:
    container_name: keycloak-db
    image: postgres:16
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - auth

networks:
  default:
  auth:

volumes:
  mongodb_data:
  keycloak_data:
